name: Resilience Mirror IPFS

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  mirror:
    runs-on: ubuntu-latest
    # Needed if we commit chain/CID.txt back to the repo
    permissions:
      contents: write
      actions: read

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: pip install PyNaCl

      - name: Verify ledger
        run: |
          test -f chain/CHAIN.jsonl || (echo "::error ::Missing chain/CHAIN.jsonl"; exit 1)
          python chain/chain_verify.py

      - name: Upload ledger artifact
        uses: actions/upload-artifact@v4
        with:
          name: fabric-ledger-${{ github.sha }}
          path: chain/CHAIN.jsonl
          if-no-files-found: error

      - name: Pin to IPFS (web3.storage)
        if: ${{ secrets.WEB3_STORAGE_TOKEN != '' }}
        env:
          WEB3_STORAGE_TOKEN: ${{ secrets.WEB3_STORAGE_TOKEN }}
        run: |
          RESP="$(curl -sS -X POST https://api.web3.storage/upload \
            -H "Authorization: Bearer ${WEB3_STORAGE_TOKEN}" \
            -F "file=@chain/CHAIN.jsonl")"
          python - <<'PY'
import json, os, sys
resp = json.loads(os.environ.get("RESP","{}"))
cid = resp.get("cid")
if not cid:
    print("::warning ::web3.storage did not return a CID")
    sys.exit(0)
print(f"CID={cid}")
open(os.environ["GITHUB_ENV"], "a").write(f"CID={cid}\n")
open(os.environ["GITHUB_STEP_SUMMARY"], "a").write(f"## IPFS (web3.storage)\n- **CID:** `{cid}`\n- **Gateway:** https://w3s.link/ipfs/{cid}\n")
PY

      - name: Pin to IPFS (Pinata)
        if: ${{ secrets.PINATA_JWT != '' }}
        env:
          PINATA_JWT: ${{ secrets.PINATA_JWT }}
        run: |
          RESP="$(curl -sS -X POST 'https://api.pinata.cloud/pinning/pinFileToIPFS' \
            -H "Authorization: Bearer ${PINATA_JWT}" \
            -F file=@chain/CHAIN.jsonl)"
          python - <<'PY'
import json, os, sys
resp = json.loads(os.environ.get("RESP","{}"))
cid = resp.get("IpfsHash")
if not cid:
    print("::warning ::Pinata did not return a CID")
    sys.exit(0)
print(f"PINATA_CID={cid}")
open(os.environ["GITHUB_ENV"], "a").write(f"PINATA_CID={cid}\n")
open(os.environ["GITHUB_STEP_SUMMARY"], "a").write(f"## IPFS (Pinata)\n- **CID:** `{cid}`\n- **Gateway:** https://gateway.pinata.cloud/ipfs/{cid}\n")
PY

      - name: Commit CID file
        # Commit if we got a CID from either pinning service
        if: ${{ (env.CID != '' || env.PINATA_CID != '') }}
        run: |
          mkdir -p chain
          {
            echo "Last refresh: $(date -u +%FT%TZ)"
            [ -n "${CID}" ] && echo "web3.storage: ${CID}"
            [ -n "${PINATA_CID}" ] && echo "pinata: ${PINATA_CID}"
          } > chain/CID.txt
          if ! git diff --quiet -- chain/CID.txt 2>/dev/null; then
            git config user.name  "github-actions[bot]"
            git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git add chain/CID.txt
            git commit -m "chore(chain): update latest IPFS CID [skip ci]"
            git push
          else
            echo "CID.txt unchanged; skipping commit."
          fi
